//top level entity for mp3 - contains if/id/ex/mem/wb/flip flops/connections between entities

import lc3b_types::*;

module pipeline
(
	input clk,

	input [15:0] mem_address,
	input [15:0] mem_wdata,
		input [15:0] mem_rdata

);

//internal signals
//group by modules!!!!

logic [15:0] plus2_out;
logic [15:0] if_id_pc_out;
lc3b_opcode id_ex_opcode_out;
logic [15:0] id_ex_trap_out;
logic [15:0] id_ex_sr1concat_out;
logic [15:0] id_ex_dest_out;
logic [15:0] id_ex_ctrl_out;
logic [15:0] ex_mem_dest_out;
lc3b_opcode ex_mem_opcode_out;
logic [15:0] ex_mem_ctrl_out;
lc3b_opcode mem_wb_opcode_out;
logic [15:0] mem_wb_mar_out;
logic [15:0] mem_wb_ctrl_out;
lc3b_opcode if_id_opcode_out;
logic [15:0] id_dest_out;
logic [15:0] id_ctrl_out;
logic [15:0] ex_mem_bradj_out;
lc3b_control_word ctrl;
logic [15:0] mem_wb_alu_out;
logic [15:0] mem_wb_mdr_out;
logic [15:0] mem_wb_bradj_out;
logic [15:0] mem_wb_pc_out;
logic [15:0] mem_wb_cc_out;
logic [15:0] mem_wb_dest_out;
logic [15:0] regfilemux_out;
logic [15:0] id_ex_pc_out;
logic [15:0] id_ex_adj_out;
logic [15:0] id_ex_sr1_out;
logic[15:0] id_ex_sr2_out;
logic [15:0] addpcadj_out;
logic [15:0] alu_out;
logic [15:0] instruction;
logic [15:0] sr1concat_out;
logic [15:0] adjtrap_out;
logic [15:0] adjmux_out;
logic [15:0] alumux_out;
logic [15:0] sr1_out;
logic [15:0] sr2_out;
logic [15:0] ex_mem_alu_out;
logic [15:0] ex_mem_pc_out;
logic [15:0] ex_mem_trap_out;
logic [15:0] ex_mem_sr1concat_out;
logic [15:0] marmux_out;
logic [15:0] mdrmux_out;
lc3b_nzp gencc_out;
logic branch_enable;

//modules

ifetch if_stage
(
	.clk(clk),
	.ctrl(ctrl),
	.if_id_pc_out(if_id_pc_out),
	.ex_mem_pc_out(ex_mem_pc_out),
	.id_ex_sr1_out(id_ex_sr1_out),
	.ex_mem_bradj_out(ex_mem_bradj_out),
	.mem_wb_mdr_out(mem_wb_mdr_out),
	.pcplus2_out(plus2_out)
);

id id_stage
(
	.clk(clk),
	.ctrl(ctrl),
	.regfilemux_out(regfilemux_out),
	.instruction(instruction),
	.branch_enable(branch_enable),
	.sr1concat_out(sr1concat_out),
	.adjtrap_out(adjtrap_out),
	.adjmux_out(adjmux_out),
	.alumux_out(alumux_out),
	.sr1_out(sr1_out),
	.sr2_out(sr2_out)
);

ex ex_stage
(
	.ctrl(ctrl),
	.id_ex_pc_out(id_ex_pc_out),
	.id_ex_adj_out(id_ex_adj_out),
	.id_ex_sr1_out(id_ex_sr1_out),
	.id_ex_sr2_out(id_ex_sr2_out),
	.addpcadj_out(addpcadj_out),
	.alu_out(alu_out)
);

mem mem_stage
(
	.ctrl(ctrl),
	.ex_mem_alu_out(ex_mem_alu_out),
	.ex_mem_pc_out(ex_mem_pc_out),
	.mem_wb_mdr_out(mem_wb_mdr_out),
	.ex_mem_trap_out(ex_mem_trap_out),
	.ex_mem_alu_out(ex_mem_alu_out),
	.mem_rdata(mem_rdata),
	.ex_mem_sr1concat_out(ex_mem_sr1concat_out),
	.wb_regfilemux_out(regfilemux_out),
	.mem_wb_cc_out(mem_wb_cc_out),
	.mem_wb_dest_out(mem_wb_dest_out),
	.marmux_out(marmux_out),
	.mdrmux_out(mdrmux_out),
	.gencc_out(gencc_out),
	.branch_enable(branch_enable)
);

wb wb_stage
(
	.ctrl(ctrl),
	.mem_address(mem_address),
	.mem_wdata(mem_wdata),
	.mem_wb_alu_out(mem_wb_alu_out),
	.mem_wb_mdr_out(mem_wb_mdr_out),
	.mem_wb_bradj_out(mem_wb_bradj_out),
	.mem_wb_pc_out(mem_wb_pc_out),
	.regfilemux_out(regfilemux_out)
);

if_id if_id_ff
(
	.clk(clk),
	.if_plus2_out(plus2_out),
	.if_id_pc_out(if_id_pc_out),
	.if_id_instr_out(mem_wdata)
);

id_ex id_ex_ff
(
	.clk(clk),
	.if_id_pc_out(if_id_pc_out),
	.if_id_opcode_out(if_id_opcode_out),
	.id_adjmux_out(adjmux_out),
	.id_trap_out(adjtrap_out),
	.id_sr1_out(sr1_out),
	.id_sr1concat_out(sr1concat_out),
	.id_sr2_out(sr2_out),
	.id_dest_out(id_dest_out),
	.id_ctrl_out(id_ctrl_out),
	.id_ex_pc_out(id_ex_pc_out),
	.id_ex_opcode_out(id_ex_opcode_out),
	.id_ex_adj_out(id_ex_adj_out),
	.id_ex_trap_out(id_ex_trap_out),
	.id_ex_sr1_out(id_ex_sr1_out),
	.id_ex_sr1concat_out(id_ex_sr1concat_out),
	.id_ex_sr2_out(id_ex_sr2_out),
	.id_ex_dest_out(id_ex_dest_out),
	.id_ex_ctrl_out(id_ex_ctrl_out)
);

ex_mem ex_mem_ff
(
	.clk(clk),
	.ex_mem_opcode_out(ex_mem_opcode_out),
	.id_ex_trap_out(id_ex_trap_out),
	.id_ex_sr1concat_out(id_ex_sr1concat_out),
	.id_ex_dest_out(id_ex_dest_out),
	.id_ex_ctrl_out(id_ex_ctrl_out),
	.id_ex_pc_out(id_ex_pc_out),
	.ex_addpcadj_out(addpcadj_out),
	.ex_alu_out(alu_out),
	.ex_mem_pc_out(ex_mem_pc_out),
	.ex_mem_opcode_out(ex_mem_opcode_out),
	.ex_mem_trap_out(ex_mem_trap_out),
	.ex_mem_alu_out(ex_mem_alu_out),
	.ex_mem_sr1concat_out(ex_mem_sr1concat_out),
	.ex_mem_dest_out(ex_mem_dest_out),
	.ex_mem_ctrl_out(ex_mem_ctrl_out),
	.ex_mem_bradj_out(ex_mem_bradj_out)
);

mem_wb mem_wb_ff
(
	.clk(clk),
	.ex_mem_pc_out(ex_mem_pc_out),
	.ex_mem_opcode_out(ex_mem_opcode_out),
	.mem_marmux_out(marmux_out),
	.mem_mdrmux_out(mdrmux_out),
	.ex_mem_alu_out(ex_mem_alu_out),
	.ex_mem_ctrl_out(ex_mem_ctrl_out),
	.mem_gencc_out(gencc_out),
	.ex_mem_bradj_out(ex_mem_bradj_out),
	.mem_wb_pc_out(mem_wb_pc_out),
	.mem_wb_opcode_out(mem_wb_opcode_out),
	.mem_wb_mar_out(mem_wb_mar_out),
	.mem_wb_mdr_out(mem_wb_mdr_out),
	.mem_wb_alu_out(mem_wb_alu_out),
	.mem_wb_ctrl_out(mem_wb_ctrl_out),
	.mem_wb_cc_out(mem_wb_cc_out),
	.mem_wb_bradj_out(mem_wb_bradj_out)
);

endmodule : pipeline